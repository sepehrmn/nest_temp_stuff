Phase 1: Testing if SLI can execute scripts and report errors
-------------------------------------------------------------
  Running test 'selftests/test_pass.sli'... Success
  Running test 'selftests/test_goodhandler.sli'... Success
  Running test 'selftests/test_lazyhandler.sli'... Success
  Running test 'selftests/test_fail.sli'... Success
  Running test 'selftests/test_stop.sli'... Success
  Running test 'selftests/test_badhandler.sli'... Success

Phase 2: Testing SLI's unittest library
---------------------------------------
  Running test 'selftests/test_pass_or_die.sli'... Success
  Running test 'selftests/test_assert_or_die_b.sli'... Success
  Running test 'selftests/test_assert_or_die_p.sli'... Success
  Running test 'selftests/test_fail_or_die.sli'... Success
  Running test 'selftests/test_crash_or_die.sli'... Success
  Running test 'selftests/test_failbutnocrash_or_die_crash.sli'... Success
  Running test 'selftests/test_failbutnocrash_or_die_pass.sli'... Success
  Running test 'selftests/test_passorfailbutnocrash_or_die.sli'... Success

Phase 3: Running NEST unit tests
--------------------------------
  Running test 'unittests/issue-463.sli'... Success
  Running test 'unittests/issue-565.sli'... Success
  Running test 'unittests/model_node_init.sli'... Success
  Running test 'unittests/test_DoubleVector_IntVector.sli'... Success
  Running test 'unittests/test_GetConnections.sli'... Success
  Running test 'unittests/test_Map.sli'... Success
  Running test 'unittests/test_MapIndexed.sli'... Success
  Running test 'unittests/test_ac_generator.sli'... Success
  Running test 'unittests/test_add_freeze_thaw.sli'... Success
  Running test 'unittests/test_aeif_cond_alpha_multisynapse.sli'... Success
  Running test 'unittests/test_aeif_cond_beta_multisynapse.sli'... Success
  Running test 'unittests/test_amat2_psc_exp.sli'... Success
  Running test 'unittests/test_bernoulli_synapse.sli'... Success
  Running test 'unittests/test_binary.sli'... Success
  Running test 'unittests/test_common_props_setting.sli'... Success
  Running test 'unittests/test_compare_delta.sli'... Success
  Running test 'unittests/test_cond_exp_models.sli'... Success
  Running test 'unittests/test_connect.sli'... Success
  Running test 'unittests/test_connect_after_simulate.sli'... Success
  Running test 'unittests/test_connect_with_threads.sli'... Success
  Running test 'unittests/test_cont_delay_synapse.sli'... Success
  Running test 'unittests/test_copymodel.sli'... Success
  Running test 'unittests/test_corr_det.sli'... Success
  Running test 'unittests/test_corr_matrix_det.sli'... Success
  Running test 'unittests/test_correlospinmatrix_detector.sli'... Success
  Running test 'unittests/test_count_connections.sli'... Success
  Running test 'unittests/test_cva.sli'... Success
  Running test 'unittests/test_cvi.sli'... Success
  Running test 'unittests/test_dcgen_versus_I_e.sli'... Success
  Running test 'unittests/test_default_delays_weights.sli'... Success
  Running test 'unittests/test_delay_after_res_change.sli'... Success
  Running test 'unittests/test_delay_check.sli'... Success
  Running test 'unittests/test_dirname.sli'... Success
  Running test 'unittests/test_distance.sli'... Success
  Running test 'unittests/test_fast_operators.sli'... Success
  Running test 'unittests/test_free_mask_circ_anchor_00.sli'... Success
  Running test 'unittests/test_free_mask_circ_anchor_01.sli'... Success
  Running test 'unittests/test_free_mask_circ_anchor_10.sli'... Success
  Running test 'unittests/test_free_mask_circ_anchor_11.sli'... Success
  Running test 'unittests/test_free_mask_donut_anchor_00.sli'... Success
  Running test 'unittests/test_free_mask_donut_anchor_01.sli'... Success
  Running test 'unittests/test_free_mask_donut_anchor_10.sli'... Success
  Running test 'unittests/test_free_mask_donut_anchor_11.sli'... Success
  Running test 'unittests/test_free_mask_rect_00.sli'... Success
  Running test 'unittests/test_free_mask_rect_01.sli'... Success
  Running test 'unittests/test_free_mask_rect_11.sli'... Success
  Running test 'unittests/test_free_mask_rect_13.sli'... Success
  Running test 'unittests/test_gamma_sup_generator.sli'... Success
  Running test 'unittests/test_gap_junction.sli'... Success
  Running test 'unittests/test_gif_cond_exp.sli'... Success
  Running test 'unittests/test_gif_cond_exp_multisynapse.sli'... Success
  Running test 'unittests/test_gif_pop_psc_exp.sli'... Success
  Running test 'unittests/test_gif_psc_exp.sli'... Success
  Running test 'unittests/test_gif_psc_exp_multisynapse.sli'... Success
  Running test 'unittests/test_ginzburg_and_mcculloch.sli'... Success
  Running test 'unittests/test_hh_cond_beta_gap_traub.sli'... Success
  Running test 'unittests/test_hh_cond_exp_traub.sli'... Success
  Running test 'unittests/test_hh_psc_alpha_gap.sli'... Success
  Running test 'unittests/test_hpc_synapse.sli'... Success
  Running test 'unittests/test_iaf.sli'... Success
  Running test 'unittests/test_iaf_1to2.sli'... Success
  Running test 'unittests/test_iaf_1to2_default_delay.sli'... Success
  Running test 'unittests/test_iaf_1to2_ex.sli'... Success
  Running test 'unittests/test_iaf_dc.sli'... Success
  Running test 'unittests/test_iaf_dc_aligned.sli'... Success
  Running test 'unittests/test_iaf_dc_aligned_automatic.sli'... Success
  Running test 'unittests/test_iaf_dc_aligned_delay.sli'... Success
  Running test 'unittests/test_iaf_dc_aligned_stop.sli'... Success
  Running test 'unittests/test_iaf_fudge.sli'... Success
  Running test 'unittests/test_iaf_i0.sli'... Success
  Running test 'unittests/test_iaf_i0_refractory.sli'... Success
  Running test 'unittests/test_iaf_min_delay_create.sli'... Success
  Running test 'unittests/test_iaf_min_delay_set.sli'... Success
  Running test 'unittests/test_iaf_min_delay_simblocks.sli'... Success
  Running test 'unittests/test_iaf_ps_dc_accuracy.sli'... Success
  Running test 'unittests/test_iaf_ps_dc_t_accuracy.sli'... Success
  Running test 'unittests/test_iaf_ps_psp_accuracy.sli'... Success
  Running test 'unittests/test_iaf_ps_psp_poisson_accuracy.sli'... Success
  Running test 'unittests/test_iaf_ps_psp_poisson_generator_accuracy.sli'... Success
  Running test 'unittests/test_iaf_ps_psp_poisson_spike_accuracy.sli'... Success
  Running test 'unittests/test_iaf_psc_alpha_multisynapse.sli'... Success
  Running test 'unittests/test_iaf_psc_exp.sli'... Success
  Running test 'unittests/test_iaf_psc_exp_multisynapse.sli'... Success
  Running test 'unittests/test_iaf_psc_exp_ps.sli'... Success
  Running test 'unittests/test_iaf_psc_exp_ps_lossless.sli'... Success
  Running test 'unittests/test_iaf_psp.sli'... Success
  Running test 'unittests/test_iaf_psp_normalized.sli'... Success
  Running test 'unittests/test_iaf_psp_peak.sli'... Success
  Running test 'unittests/test_inh_stdp_synapse.sli'... Success
  Running test 'unittests/test_inhomogeneous_poisson_generator.sli'... Success
  Running test 'unittests/test_lambertw.sli'... Success
  Running test 'unittests/test_mat2_psc_exp.sli'... Success
  Running test 'unittests/test_max_delay.sli'... Success
  Running test 'unittests/test_message.sli'... Success
  Running test 'unittests/test_min_delay.sli'... Success
  Running test 'unittests/test_min_delay_tics_reset.sli'... Success
  Running test 'unittests/test_mip_corrdet.sli'... Success
  Running test 'unittests/test_multimeter.sli'... Success
  Running test 'unittests/test_multimeter_freeze_thaw.sli'... Success
  Running test 'unittests/test_multimeter_offset.sli'... Success
  Running test 'unittests/test_multimeter_stepping.sli'... Success
  Running test 'unittests/test_multimeter_support.sli'... Success
  Running test 'unittests/test_multiple_multimeter.sli'... Success
  Running test 'unittests/test_multiple_random_source_stepping.sli'... Success
  Running test 'unittests/test_multisynapse_models.sli'... Success
  Running test 'unittests/test_multithreading.sli'... Success
  Running test 'unittests/test_neurons_handle_multiplicity.sli'... Success
  Running test 'unittests/test_node_collection.sli'... Running '/home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/bin/nest' '/home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/share/doc/nest/unittests/test_node_collection.sli'
[INFO] [2020.4.22 1:54:52 /home/sepehrmn/code/sepehrmn-github/nest-simulator/src/nestkernel/rng_manager.cpp:208 @ Network::create_rngs_] : Creating default RNGs
[INFO] [2020.4.22 1:54:52 /home/sepehrmn/code/sepehrmn-github/nest-simulator/src/nestkernel/rng_manager.cpp:251 @ Network::create_grng_] : Creating new default global RNG
NEST master@79f8df296 (C) 2004 The NEST Initiative

Apr 22 01:54:52 SLI [Progress]:
    No node collection without nodes

Apr 22 01:54:52 SLI [Progress]:
    Create returns NodeCollection

Apr 22 01:54:52 SLI [Progress]:
    Check length of NodeCollections from Create

Apr 22 01:54:52 SLI [Progress]:
    Check that NodeCollection can be converted to array

Apr 22 01:54:52 SLI [Progress]:
    Check array can be converted to NodeCollection for existing neurons

Apr 22 01:54:52 SLI [Progress]:
    Check intvector can be converted to NodeCollection for existing neurons

Apr 22 01:54:52 SLI [Progress]:
    Check unsorted array can be converted to NodeCollection for existing
    neurons

Apr 22 01:54:52 SLI [Progress]:
    Check unsorted array can be converted to NodeCollection for existing
    neurons, multiple types

Apr 22 01:54:52 SLI [Progress]:
    Check contiguous join

Apr 22 01:54:52 SLI [Progress]:
    Check contiguous join with inverted order

Apr 22 01:54:52 SLI [Progress]:
    Check non-contiguous join

Apr 22 01:54:52 SLI [Progress]:
    Check inhomogeneous join

Apr 22 01:54:52 SLI [Progress]:
    Illegal join with different metadata

Apr 22 01:54:52 SLI [Progress]:
    Check create with multiple equal node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join primitives with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join composites with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join primitive with composite with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join composite with primitive with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check element access

Apr 22 01:54:52 SLI [Progress]:
    Check too large positive index fails

Apr 22 01:54:52 SLI [Progress]:
    Check too large negative index fails

Apr 22 01:54:52 SLI [Progress]:
    Test iteration with forall

Apr 22 01:54:52 SLI [Progress]:
    Test iteration with Map

Apr 22 01:54:52 SLI [Progress]:
    Test slicing with Take, primitive

Apr 22 01:54:52 SLI [Progress]:
    Test slicing with Take, composite

Apr 22 01:54:52 SLI [Progress]:
    More complex Take example, checking result in various ways

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 1

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 2

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 3

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with negative step

Apr 22 01:54:52 SLI [Progress]:
    Test select all

Apr 22 01:54:52 SLI [Progress]:
    Test select none

Apr 22 01:54:52 SLI [Progress]:
    Test select some

Apr 22 01:54:52 SLI [Progress]:
    Element membership

Apr 22 01:54:52 SLI [Progress]:
    GetStatus on collection

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection with multiple dicts

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection with multiple dicts error

Apr 22 01:54:52 SLI [Progress]:
    Basic Connect test

Apr 22 01:54:52 SLI [Progress]:
    Check connect with sliced composite with step>1
NodeCollection(metadata=None,
               model=proxynode, size=16, first=0, last=196, step=6;
               model=iaf_psc_exp, size=3, first=202, last=214, step=6)

Apr 22 01:54:52 SLI [Progress]:
    Check that Connect checks NC validity, first arg

Apr 22 01:54:52 unittest::fail_or_die [Fatal]:
    Code block failed to raise an error.
    Code block:
    {<< >> begin (Check that Connect checks NC validity, first arg) M_PROGRESSmessage ResetKernel /n /iaf_psc_alpha 5 Create def ResetKernel /m /iaf_psc_alpha 5 Create def n m Connect end}

Apr 22 01:54:52 unittest::fail_or_die [Fatal]:
    Exiting with code 3.
Failed: tested code block failed to fail
==================================================
Following is the full output of the test:
==================================================
Running '/home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/bin/nest' '/home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/share/doc/nest/unittests/test_node_collection.sli'
[INFO] [2020.4.22 1:54:52 /home/sepehrmn/code/sepehrmn-github/nest-simulator/src/nestkernel/rng_manager.cpp:208 @ Network::create_rngs_] : Creating default RNGs
[INFO] [2020.4.22 1:54:52 /home/sepehrmn/code/sepehrmn-github/nest-simulator/src/nestkernel/rng_manager.cpp:251 @ Network::create_grng_] : Creating new default global RNG
NEST master@79f8df296 (C) 2004 The NEST Initiative

Apr 22 01:54:52 SLI [Progress]:
    No node collection without nodes

Apr 22 01:54:52 SLI [Progress]:
    Create returns NodeCollection

Apr 22 01:54:52 SLI [Progress]:
    Check length of NodeCollections from Create

Apr 22 01:54:52 SLI [Progress]:
    Check that NodeCollection can be converted to array

Apr 22 01:54:52 SLI [Progress]:
    Check array can be converted to NodeCollection for existing neurons

Apr 22 01:54:52 SLI [Progress]:
    Check intvector can be converted to NodeCollection for existing neurons

Apr 22 01:54:52 SLI [Progress]:
    Check unsorted array can be converted to NodeCollection for existing
    neurons

Apr 22 01:54:52 SLI [Progress]:
    Check unsorted array can be converted to NodeCollection for existing
    neurons, multiple types

Apr 22 01:54:52 SLI [Progress]:
    Check contiguous join

Apr 22 01:54:52 SLI [Progress]:
    Check contiguous join with inverted order

Apr 22 01:54:52 SLI [Progress]:
    Check non-contiguous join

Apr 22 01:54:52 SLI [Progress]:
    Check inhomogeneous join

Apr 22 01:54:52 SLI [Progress]:
    Illegal join with different metadata

Apr 22 01:54:52 SLI [Progress]:
    Check create with multiple equal node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join primitives with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join composites with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join primitive with composite with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check join composite with primitive with overlapping node IDs

Apr 22 01:54:52 SLI [Progress]:
    Check element access

Apr 22 01:54:52 SLI [Progress]:
    Check too large positive index fails

Apr 22 01:54:52 SLI [Progress]:
    Check too large negative index fails

Apr 22 01:54:52 SLI [Progress]:
    Test iteration with forall

Apr 22 01:54:52 SLI [Progress]:
    Test iteration with Map

Apr 22 01:54:52 SLI [Progress]:
    Test slicing with Take, primitive

Apr 22 01:54:52 SLI [Progress]:
    Test slicing with Take, composite

Apr 22 01:54:52 SLI [Progress]:
    More complex Take example, checking result in various ways

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 1

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 2

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with out-of-bound value 3

Apr 22 01:54:52 SLI [Progress]:
    Slice attempt with negative step

Apr 22 01:54:52 SLI [Progress]:
    Test select all

Apr 22 01:54:52 SLI [Progress]:
    Test select none

Apr 22 01:54:52 SLI [Progress]:
    Test select some

Apr 22 01:54:52 SLI [Progress]:
    Element membership

Apr 22 01:54:52 SLI [Progress]:
    GetStatus on collection

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection with multiple dicts

Apr 22 01:54:52 SLI [Progress]:
    SetStatus on collection with multiple dicts error

Apr 22 01:54:52 SLI [Progress]:
    Basic Connect test

Apr 22 01:54:52 SLI [Progress]:
    Check connect with sliced composite with step>1
NodeCollection(metadata=None,
               model=proxynode, size=16, first=0, last=196, step=6;
               model=iaf_psc_exp, size=3, first=202, last=214, step=6)

Apr 22 01:54:52 SLI [Progress]:
    Check that Connect checks NC validity, first arg

Apr 22 01:54:52 unittest::fail_or_die [Fatal]:
    Code block failed to raise an error.
    Code block:
    {<< >> begin (Check that Connect checks NC validity, first arg) M_PROGRESSmessage ResetKernel /n /iaf_psc_alpha 5 Create def ResetKernel /m /iaf_psc_alpha 5 Create def n m Connect end}

Apr 22 01:54:52 unittest::fail_or_die [Fatal]:
    Exiting with code 3.
==================================================
  Running test 'unittests/test_noise_generator.sli'... Success
  Running test 'unittests/test_oversize_mask.sli'... Success
  Running test 'unittests/test_poisson_generator_campbell_alpha.sli'... Success
  Running test 'unittests/test_poisson_generator_ps.sli'... Success
  Running test 'unittests/test_poisson_ps_intervals.sli'... Success
  Running test 'unittests/test_poisson_ps_min_interval.sli'... Success
  Running test 'unittests/test_pp_pop_psc_delta.sli'... Success
  Running test 'unittests/test_pp_psc_delta.sli'... Success
  Running test 'unittests/test_ppd_sup_generator.sli'... Success
  Running test 'unittests/test_psp_amplitude_consistency.sli'... Success
  Running test 'unittests/test_pulsepacket_generator.sli'... Success
  Running test 'unittests/test_random.sli'... Success
  Running test 'unittests/test_random_binomial.sli'... Success
  Running test 'unittests/test_random_clipped.sli'... Success
  Running test 'unittests/test_rate_connections.sli'... Success
  Running test 'unittests/test_rdv_discreteness.sli'... Success
  Running test 'unittests/test_rdv_param_setting.sli'... Success
  Running test 'unittests/test_reg_mask_circ_anchor_00.sli'... Success
  Running test 'unittests/test_reg_mask_circ_anchor_01.sli'... Success
  Running test 'unittests/test_reg_mask_circ_anchor_10.sli'... Success
  Running test 'unittests/test_reg_mask_circ_anchor_11.sli'... Success
  Running test 'unittests/test_reg_mask_donut_anchor_00.sli'... Success
  Running test 'unittests/test_reg_mask_donut_anchor_01.sli'... Success
  Running test 'unittests/test_reg_mask_donut_anchor_10.sli'... Success
  Running test 'unittests/test_reg_mask_donut_anchor_11.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_00.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_01.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_02.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_03.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_04.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_05.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_06.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_10.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_11.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_13.sli'... Success
  Running test 'unittests/test_reg_mask_grid_anchor_15.sli'... Success
  Running test 'unittests/test_reg_mask_rect_00.sli'... Success
  Running test 'unittests/test_reg_mask_rect_01.sli'... Success
  Running test 'unittests/test_reg_mask_rect_02.sli'... Success
  Running test 'unittests/test_reg_mask_rect_10.sli'... Success
  Running test 'unittests/test_reg_mask_rect_11.sli'... Success
  Running test 'unittests/test_rng_seeds.sli'... Success
  Running test 'unittests/test_round.sli'... Success
  Running test 'unittests/test_rows_cols_pos.sli'... Success
  Running test 'unittests/test_set_Vm.sli'... Success
  Running test 'unittests/test_set_delay_extrema.sli'... Success
  Running test 'unittests/test_set_start_stop_origin.sli'... Success
  Running test 'unittests/test_set_tics.sli'... Success
  Running test 'unittests/test_setconnections_threads.sli'... Success
  Running test 'unittests/test_sinusoidal_gamma_generator.sli'... Success
  Running test 'unittests/test_sinusoidal_poisson_generator.sli'... Success
  Running test 'unittests/test_sli_neuron.sli'... Success
  Running test 'unittests/test_sort.sli'... Success
  Running test 'unittests/test_spike_det_reset.sli'... Success
  Running test 'unittests/test_spike_detector.sli'... Success
  Running test 'unittests/test_spike_dilutor.sli'... Success
  Running test 'unittests/test_spike_generator.sli'... Success
  Running test 'unittests/test_spike_poisson_ps.sli'... Success
  Running test 'unittests/test_spike_poisson_ps_base2.sli'... Success
  Running test 'unittests/test_spike_transmission_ps.sli'... Success
  Running test 'unittests/test_spike_transmission_ps_iaf.sli'... Success
  Running test 'unittests/test_spin_detector.sli'... Success
  Running test 'unittests/test_stdp_synapse.sli'... Success
  Running test 'unittests/test_step_current_generator.sli'... Success
  Running test 'unittests/test_steppedsim.sli'... Success
  Running test 'unittests/test_symmetric_connections.sli'... Success
  Running test 'unittests/test_syn_hom_w.sli'... Success
  Running test 'unittests/test_thread_local_ids.sli'... Success
  Running test 'unittests/test_threaded_multimeter.sli'... Success
  Running test 'unittests/test_threaded_spike_detector.sli'... Success
  Running test 'unittests/test_time_input.sli'... Success
  Running test 'unittests/test_tsodyks_depressing.sli'... Success
  Running test 'unittests/test_tsodyks_facilitating.sli'... Success
  Running test 'unittests/test_two_devices.sli'... Success
  Running test 'unittests/test_voltmeter_reset.sli'... Success
  Running test 'unittests/test_weight_delay.sli'... Success
  Running test 'unittests/test_weight_delay_free.sli'... Success
  Running test 'unittests/test_wfr_settings.sli'... Success

Phase 4: Running regression tests
---------------------------------
  Running test 'regressiontests/issue-105.sli'... Success
  Running test 'regressiontests/issue-1085.sli'... Success
  Running test 'regressiontests/issue-1100.sli'... Success
  Running test 'regressiontests/issue-1140.sli'... Success
  Running test 'regressiontests/issue-1212.sli'... Success
  Running test 'regressiontests/issue-1242.sli'... Success
  Running test 'regressiontests/issue-1305.sli'... Success
  Running test 'regressiontests/issue-1366.sli'... Success
  Running test 'regressiontests/issue-211.sli'... Success
  Running test 'regressiontests/issue-264.sli'... Success
  Running test 'regressiontests/issue-311.sli'... Success
  Running test 'regressiontests/issue-327.sli'... Success
  Running test 'regressiontests/issue-351.sli'... Success
  Running test 'regressiontests/issue-368.sli'... Success
  Running test 'regressiontests/issue-410.sli'... Success
  Running test 'regressiontests/issue-437.sli'... Success
  Running test 'regressiontests/issue-521.sli'... Success
  Running test 'regressiontests/issue-545.sli'... Success
  Running test 'regressiontests/issue-596.sli'... Success
  Running test 'regressiontests/issue-659.sli'... Success
  Running test 'regressiontests/issue-665.sli'... Success
  Running test 'regressiontests/issue-707.sli'... Success
  Running test 'regressiontests/issue-708.sli'... Success
  Running test 'regressiontests/issue-735.sli'... Success
  Running test 'regressiontests/issue-737-threads.sli'... Success
  Running test 'regressiontests/issue-737.sli'... Success
  Running test 'regressiontests/issue-740.sli'... Success
  Running test 'regressiontests/issue-77.sli'... Success
  Running test 'regressiontests/issue-832.sli'... Success
  Running test 'regressiontests/issue-888.sli'... Success
  Running test 'regressiontests/ticket-156.sli'... Success
  Running test 'regressiontests/ticket-157.sli'... Success
  Running test 'regressiontests/ticket-235.sli'... Success
  Running test 'regressiontests/ticket-293.sli'... Success
  Running test 'regressiontests/ticket-310.sli'... Success
  Running test 'regressiontests/ticket-333.sli'... Success
  Running test 'regressiontests/ticket-349.sli'... Success
  Running test 'regressiontests/ticket-382.sli'... Success
  Running test 'regressiontests/ticket-386.sli'... Success
  Running test 'regressiontests/ticket-396.sli'... Success
  Running test 'regressiontests/ticket-414.sli'... Success
  Running test 'regressiontests/ticket-421.sli'... Success
  Running test 'regressiontests/ticket-433.sli'... Success
  Running test 'regressiontests/ticket-451.sli'... Success
  Running test 'regressiontests/ticket-452.sli'... Success
  Running test 'regressiontests/ticket-459.sli'... Success
  Running test 'regressiontests/ticket-464.sli'... Success
  Running test 'regressiontests/ticket-466.sli'... Skipped
  Running test 'regressiontests/ticket-475.sli'... Success
  Running test 'regressiontests/ticket-478.sli'... Success
  Running test 'regressiontests/ticket-481.sli'... Success
  Running test 'regressiontests/ticket-507.sli'... Success
  Running test 'regressiontests/ticket-514.sli'... Success
  Running test 'regressiontests/ticket-537.sli'... Success
  Running test 'regressiontests/ticket-564.sli'... Success
  Running test 'regressiontests/ticket-566.sli'... Success
  Running test 'regressiontests/ticket-573.sli'... Success
  Running test 'regressiontests/ticket-580.sli'... Success
  Running test 'regressiontests/ticket-618.sli'... Success
  Running test 'regressiontests/ticket-619.sli'... Success
  Running test 'regressiontests/ticket-638.sli'... Success
  Running test 'regressiontests/ticket-643.sli'... Success
  Running test 'regressiontests/ticket-673.sli'... Success
  Running test 'regressiontests/ticket-681.sli'... Success
  Running test 'regressiontests/ticket-683.sli'... Success
  Running test 'regressiontests/ticket-686-positive-parameters.sli'... Success
  Running test 'regressiontests/ticket-689.sli'... Success
  Running test 'regressiontests/ticket-692-getconnections-args.sli'... Success
  Running test 'regressiontests/ticket-710.sli'... Success
  Running test 'regressiontests/ticket-716.sli'... Success
  Running test 'regressiontests/ticket-733.sli'... Success
  Running test 'regressiontests/ticket-737.sli'... Success
  Running test 'regressiontests/ticket-754.sli'... Success
  Running test 'regressiontests/ticket-772.sli'... Success
  Running test 'regressiontests/ticket-777.sli'... Success
  Running test 'regressiontests/ticket-784.sli'... Success
  Running test 'regressiontests/ticket-785.sli'... Success
  Running test 'regressiontests/ticket-787.sli'... Success
  Running test 'regressiontests/ticket-798.sli'... Success
  Running test 'regressiontests/ticket-80-175-179.sli'... Success
  Running test 'regressiontests/ticket-800.sli'... Success
  Running test 'regressiontests/ticket-85.sli'... Success
  Running test 'regressiontests/ticket-881.sli'... Success
  Running test 'regressiontests/ticket-903.sli'... Success
  Running test 'regressiontests/ticket-921.sli'... Success
  Running test 'regressiontests/ticket-926.sli'... Success
  Running test 'regressiontests/ticket-933.sli'... Success
  Running test 'regressiontests/ticket-941.sli'... Success
  Running test 'regressiontests/ticket-949.sli'... Success
  Running test 'regressiontests/ticket-959.sli'... Success
  Running test 'regressiontests/issue-779-1016.py'... Success

Phase 5: Running MPI tests
--------------------------
  Not running MPI tests because NEST was compiled without support
  for distributed computing. See the file README.md for details.

Phase 7: Running PyNEST tests.
------------------------------

  Using nosetests.

  Create with empty parameter dictionary ... ok
  GetConnection works as expected ... ok
  GetConnection raises a TypeError when called with 0 ... ok
  GetConnection with sliced works NodeCollections ... ok
  NodeCollections index function ... ok
  Membership in NodeCollections ... ok
  Conversion from NodeCollection to list ... ok
  Test that SetStatus and GetStatus works as expected with ... ok
  NodeCollection apply ... ok
  NodeCollection apply with positions ... ok
  Tests composite NodeCollection with patched node IDs ... ok
  A NESTError is raised when trying to add a sliced composite and ... ok
  Connect works with NodeCollections ... ok
  Multiple NodeCollection calls give right indexing ... ok
  len function on NodeCollection ... ok
  Equality of NodeCollections ... ok
  Index of NodeCollections ... ok
  Iteration of NodeCollections ... ok
  Conversion from list to NodeCollection ... ok
  Correct NodeCollection model ... ok
  Senders and targets for weight recorder works as NodeCollection and list ... ok
  Slices of NodeCollections ... ok
  test_closeness_nest_lsodar (nest.tests.test_aeif_lsodar.AEIFTestCase) ... ok
  test_iaf_dc_input (nest.tests.test_aeif_lsodar.AEIFTestCase) ... ok
  test_iaf_spike_input (nest.tests.test_aeif_lsodar.AEIFTestCase) ... ok
  Time objects in models correctly updated ... ok
  Getting error when changing tic-base in prohibited conditions ...
  Apr 22 01:56:34 SimulationManager::set_status [Error]:
  Apr 22 01:56:34 SimulationManager::set_status [Error]:
  Apr 22 01:56:34 SimulationManager::set_status [Error]:
  Apr 22 01:56:34 SimulationManager::set_status [Error]:
  Ensures that the restriction to supported neuron models works. ... ok
  Ensure that depression and facilitation work correctly ... ok
  Ensure that spikes are properly processed ... ok
  testWithMPI (nest.tests.test_connect_all_patterns.TestConnectAllPatterns) ... SKIP: NEST was compiled without MPI
  testAutapsesFalse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testAutapsesTrue (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testConnectivity (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testDefaultParams (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testDelayAllSynapses (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testDelaySetting (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testHtSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testInputArray (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testInputArrayRPort (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testInputArrayToStdpSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testInputArrayWithoutAutapses (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testRPortAllSynapses (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testRPortDistribution (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testRPortSetting (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testStdpSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testStdpSynapseHom (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testSynapseSetting (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testTsodyksSynapse (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testWeightAllSynapses (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testWeightSetting (nest.tests.test_connect_all_to_all.TestAllToAll) ... ok
  testAutapsesFalse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_all_to_all.transplant_class.<locals>.C) ... ok
  Tests of connections with fixed indegree and parameter arrays ... ok
  Tests of connections with fixed outdegree and parameter arrays ... ok
  Connecting NumPy arrays of node IDs ... ok
  Connecting NumPy arrays with additional syn_spec params ... ok
  Raises exception when not using integer value for receptor_type ... ok
  Connecting NumPy arrays without specifying delays ... ok
  Connecting NumPy arrays without specifying weights ... ok
  Connecting NumPy arrays with specified receptor_type ... ok
  Connecting NumPy arrays, threaded ... ok
  Raises exception when connecting NumPy arrays with unknown nodes ... ok
  Raises exception when connecting arrays with wrong array type ... ok
  Raises exception when connecting NumPy arrays with wrong dtype ... ok
  testBinomialClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testBinomialDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testExponentialClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testExponentialDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testGammaClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testGammaDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testGslBinomialDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testLognormalClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testLognormalDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testNormalClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testNormalDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testPoissonClippedDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testPoissonDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testUniformDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testUniformIntDist (nest.tests.test_connect_distributions.TestDists) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testErrorMessages (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testInDegree (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testMultapsesFalse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testMultapsesTrue (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStatistics (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_indegree.TestFixedInDegree) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_indegree.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testErrorMessages (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testMultapsesFalse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testMultapsesTrue (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testOutDegree (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStatistics (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_outdegree.TestFixedOutDegree) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_outdegree.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testErrorMessages (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStatistics (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testTotalNumberOfConnections (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_total_number.TestFixedTotalNumber) ... ok
  testAutapsesFalse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_fixed_total_number.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testAutapsesTrue (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testConnectivity (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testDefaultParams (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testDelayAllSynapses (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testDelaySetting (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testHtSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testInputArray (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testInputArrayRPort (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testInputArrayToStdpSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testRPortAllSynapses (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testRPortSetting (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testStdpSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testStdpSynapseHom (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testSymmetricFlag (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testSynapseSetting (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testTsodyksSynapse (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testWeightAllSynapses (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testWeightSetting (nest.tests.test_connect_one_to_one.TestOneToOne) ... ok
  testAutapsesFalse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_one_to_one.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testAutapsesTrue (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testDefaultParams (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testDelayAllSynapses (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testDelaySetting (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testHtSynapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testRPortAllSynapses (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testRPortSetting (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStatistics (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStdpSynapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testStdpSynapseHom (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testSynapseSetting (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testTsodyksSynapse (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testWeightAllSynapses (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testWeightSetting (nest.tests.test_connect_pairwise_bernoulli.TestPairwiseBernoulli) ... ok
  testAutapsesFalse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_parameters.TestParams) ... ok
  testAutapsesTrue (nest.tests.test_connect_parameters.TestParams) ... ok
  testDefaultParams (nest.tests.test_connect_parameters.TestParams) ... ok
  testDelayAllSynapses (nest.tests.test_connect_parameters.TestParams) ... ok
  testDelaySetting (nest.tests.test_connect_parameters.TestParams) ... ok
  testHtSynapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testRPortAllSynapses (nest.tests.test_connect_parameters.TestParams) ... ok
  testRPortSetting (nest.tests.test_connect_parameters.TestParams) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_parameters.TestParams) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_parameters.TestParams) ... ok
  testStdpSynapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testStdpSynapseHom (nest.tests.test_connect_parameters.TestParams) ... ok
  testSynapseSetting (nest.tests.test_connect_parameters.TestParams) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testTsodyksSynapse (nest.tests.test_connect_parameters.TestParams) ... ok
  testWeightAllSynapses (nest.tests.test_connect_parameters.TestParams) ... ok
  testWeightSetting (nest.tests.test_connect_parameters.TestParams) ... ok
  testAutapsesFalse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testAutapsesTrue (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDefaultParams (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDelayAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testDelaySetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testHtSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testRPortAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testRPortSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testStdpSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testSynapseSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testTsodyksSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testWeightAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testWeightSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.transplant_class.<locals>.C) ... ok
  testAutapsesFalse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testAutapsesTrue (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testDefaultParams (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testDelayAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testDelaySetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testHtSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testMakeSymmetric (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testMultapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testQuantalStpSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testRPortAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testRPortSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStatistics (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStdpDopamineSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStdpFacetshwSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStdpPlSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStdpSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testStdpSynapseHom (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testSynapseSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testTsodyks2Synapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testTsodyksSynapse (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testWeightAllSynapses (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  testWeightSetting (nest.tests.test_connect_symmetric_pairwise_bernoulli.TestSymmetricPairwiseBernoulli) ... ok
  CopyModel ... ok
  Model Creation ... ok
  Model Creation with N ... ok
  Model Creation with N and dict ... ok
  IAF Creation with N and dicts ... ok
  One-to-one connectivity using CGConnect with id intvectors ... SKIP: NEST was built without support for libneurosim
  One-to-one connectivity using CGConnect with paramters ... SKIP: NEST was built without support for libneurosim
  One-to-one connectivity using CGConnect with synmodel ... SKIP: NEST was built without support for libneurosim
  One-to-one connectivity using CGConnect with id tuples ... SKIP: NEST was built without support for libneurosim
  Error handling of CGConnect in case of unknown nodes ... SKIP: NEST was built without support for libneurosim
  Error handling of CGConnect in case of unknown synapse model ... SKIP: NEST was built without support for libneurosim
  Check get recordables ... ok
  Check the length and contents of recorded current vectors ... ok
  simulates erfc neuron for different parameter sets and compares ... ok
  Division by zero ... ok
  Invalid NodeCollection ... FAIL
  Error raising ... ok
  Stack underflow ... ok
  Unknown model name ... ok
  Unknown node ... ok
  Spike Events ... ok
  Voltage Events ... ok
  Test that get function works as expected. ... ok
  Test that get function with json output works as expected. ... ok
  Test get using getattr ... ok
  Test that get function works on composite NodeCollections ... ok
  Test get with different input for different sizes of NodeCollections ... ok
  Test that get function with Pandas output works as expected. ... SKIP: Pandas package is not available
  Test that get works on sliced NodeCollections ... ok
  Test that set function works as expected. ... ok
  Test set using setattr ... ok
  Test that set works on composite NodeCollections ... ok
  GetConnections ... ok
  test GetNodes ... ok
  test GetNodes with params ... ok
  Check LIF model ... ok
  Check LIF_ASC model ... ok
  Check LIF_R model ... ok
  Check LIF_R_ASC model ... ok
  Check LIF_R_ASC_A model ... ok
  Check LIF model ... ok
  Check LIF_ASC model ... ok
  Check LIF_R model ... ok
  Check LIF_R_ASC model ... ok
  Check LIF_R_ASC_A model ... ok
  test_get_verbosity (nest.tests.test_helper_functions.TestHelperFunctions) ... ok
  test_set_verbosity (nest.tests.test_helper_functions.TestHelperFunctions) ... ok
  JSON data of GetDefaults ... ok
  JSON data of KernelStatus ... ok
  JSON data of GetStatus ... ok
  Get labeled synapses with GetConnections. ... ok
  Try set a label to an 'un-label-able' synapse. ... ok
  Set a label to a labeled synapse on connect. ... ok
  Set a label to a labeled synapse on SetDefaults. ... ok
  Set a label to a labeled synapse on SetStatus. ... ok
  testNeuron (nest.tests.test_mc_neuron.TestMCNeuron) ... ok
  Test SetStatus with dict with list that is not to be split ... ok
  Test SetStatus with dict ... ok
  Test SetStatus with multivalue dict ... ok
  Test SetStatus with dict with bool ... ok
  Test SetStatus with dict with list of bools ... ok
  Test SetStatus with dict with lists ... ok
  Test SetStatus with dict with numpy ... ok
  Test SetStatus with dict with single element lists ... ok
  Test SetStatus with dict with list ... ok
  Test SetStatus with list of dicts ... ok
  Test SetStatus with dict with random.uniform ... ok
  Test SetStatus with val as random.uniform ... ok
  Test dimension specific connection distance parameter ... ok
  Test connection distance parameter ... ok
  Test connection distance parameter with wrong dimension ... ok
  Test parameter in conn_spec ... ok
  Test cosine of a parameter ... ok
  Test Create with different parameters added ... ok
  Test Create with random.exonential as parameter ... ok
  Test Create with random.lognormal as parameter ... ok
  Test Create with random.normal as parameter ... ok
  Test Create with random.uniform as parameter ... ok
  Test Create with list as parameter ... ok
  Test Create with numpy array as parameter ... ok
  Test Create with several lists as parameters ... ok
  Test Create with list that should not be split ... ok
  Test exponential of a parameter ... ok
  Test max of parameter ... ok
  Test min of parameter ... ok
  Test node-position parameter ... ok
  Test node-position parameter with wrong dimension ... ok
  Parameter apply function ... ok
  Test parameter arithmetic ... ok
  Test comparison of parameters ... ok
  Test conditional parameter ... ok
  Test conditional parameter with scalars ... ok
  Test parameter is_spatial function ... ok
  Test positions specified by parameter ... ok
  Test redraw of parameter ... ok
  Test redraw of parameter with impossible to satisfy limits ... ok
  Test redraw of parameter with wrong limits ... ok
  Test set with dict with list that is not to be split ... ok
  Test set with dict with list with bool ... ok
  Test set with dict with lists ... ok
  Test set with dict with single element lists ... ok
  Test set with dict with list ... ok
  Test set with dict with random parameter ... ok
  Test set with random parameter as val ... ok
  Test sine of a parameter ... ok
  Test source and target position parameter ... ok
  Test source and target position parameter with wrong arguments ... ok
  Test parameter in syn_spec ... ok
  Connect pre to post ... ok
  Connect pre to post with a params dict ... ok
  Connect pre to post with a weight and delay ... ok
  Wrong Connections ... ok
  Unexpected Event ... ok
  test_add (nest.tests.test_parameter.TestParameter) ... ok
  test_div (nest.tests.test_parameter.TestParameter) ... ok
  test_mul (nest.tests.test_parameter.TestParameter) ... ok
  test_neg (nest.tests.test_parameter.TestParameter) ... ok
  test_radd (nest.tests.test_parameter.TestParameter) ... ok
  test_rmul (nest.tests.test_parameter.TestParameter) ... ok
  test_rsub (nest.tests.test_parameter.TestParameter) ... ok
  test_rsub_all_neg (nest.tests.test_parameter.TestParameter) ... ok
  test_sub (nest.tests.test_parameter.TestParameter) ... ok
  Check parrot_neuron heeds multiplicity information in incoming spikes. ... ok
  Check post-pre spike pairings between parrot_neurons ... ok
  Check pre-post spike pairings between parrot_neurons ... ok
  Check parrot_neuron ignores spikes on port 1 ... ok
  Check parrot_neuron correctly repeats multiple spikes ... ok
  Check parrot_neuron repeats spikes on port 0 ... ok
  Check parrot_neuron heeds multiplicity information in incoming spikes. ... ok
  Check post-pre spike pairings between parrot_neurons decrement ... ok
  Check pre-post spike pairings between parrot_neurons increments ... ok
  Statistical test of poisson_generator_ps rate change ... ok
  Check if threshold adaptation works by looking for negative serial ... ok
  Check if random dead-time moments are respected. ... ok
  Check for reasonable firing rate and if fixed dead-time is respected ... ok
  Compare quantal_stp_synapse with its deterministic equivalent ... ok
  Test exponential distribution Parameter ... ok
  Test lognormal distribution Parameter ... ok
  Test normal distribution Parameter ... ok
  Test uniform distribution Parameter ... ok
  test_rate_copy_model (nest.tests.test_rate_copy_model.RateCopyModelTestCase) ... ok
  test_rate_instantaneous_and_delayed (nest.tests.test_rate_instantaneous_and_delayed.RateInstantaneousAndDelayedTestCase) ... ok
  Check the mean value of the rate_neurons ... ok
  Check noise of the rate_neurons ... ok
  Check the variance of the rate of the rate_neuron for input noise ... ok
  Check the parrot rate neuron with sigm non-linearity ... ok
  Check the delay of the connection ... ok
  Check the non-linearity of the neuron ... ok
  Check the weight of the connection ... ok
  Check the rectification of the output ... ok
  Apr 22 01:57:13 RecordingBackendASCII::enroll() [Error]:
  Test if filename is corrrectly built. ... ok
  Test that n_events counts the number of events correctly. ... ok
  Test if the file contains correct headers and expected content ... ok
  Test that label replaces the model name in the file name if set. ... ok
  testResetEventCounter (nest.tests.test_recording_backend_ascii.TestRecordingBackendASCII) ... ok
  Check if time_in_steps works properly. ... ok
  Test that n_events counts the number of events correctly. ... ok
  Test if the event dict is there from the start. ... ok
  testResetEventCounter (nest.tests.test_recording_backend_memory.TestRecordingBackendMemory) ... ok
  testTimeInSteps (nest.tests.test_recording_backend_memory.TestRecordingBackendMemory) ... ok
  Test reset of recording backend defaults. ... ok
  Test availability of default recording backends. ... ok
  Test setting of global backend properties. ... ok
  Test that backend defaults end up in instances. ... ok
  Test setting the default recording backend. ... ok
  Test setting recording backend defaults. ... ok
  Check that refractory time implementation is correct. ... ok
  construct a network of the form: ... ok
  Invariable number of spikes with multiple poisson generators ... ok
  Check the rate prediction of the siegert neuron ... ok
  test_not_implemented_rules (nest.tests.test_sp.test_conn_builder.TestSPBuilder) ... ok
  test_synapse_initialisation_all_to_all (nest.tests.test_sp.test_conn_builder.TestSPBuilder) ... ok
  test_synapse_initialisation_one_to_one (nest.tests.test_sp.test_conn_builder.TestSPBuilder) ... ok
  test_synapse_deletion_one_to_one_no_sp (nest.tests.test_sp.test_disconnect.TestDisconnectSingle) ... ok
  test_disconnect_all_to_all (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_disconnect_defaults (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_disconnect_static_synapse (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_multiple_synapse_deletion_all_to_all (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_multiple_synapse_deletion_one_to_one (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_multiple_synapse_deletion_one_to_one_no_sp (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_single_synapse_deletion_sp (nest.tests.test_sp.test_disconnect_multiple.TestDisconnect) ... ok
  test_enable_multithread (nest.tests.test_sp.test_enable_multithread.TestEnableMultithread) ... ok
  test_multithread_enable (nest.tests.test_sp.test_enable_multithread.TestEnableMultithread) ... ok
  testWithMPI (nest.tests.test_sp.test_mpitests.TestStructuralPlasticityMPI) ... SKIP: NEST was compiled without MPI
  test_PushPop_no_NumPy (nest.tests.test_stack.StackTestCase) ... SKIP: Makes no sense when NumPy package is available
  test_stack_checker (nest.tests.test_stack.StackTestCase) ... ok
  Check weight convergence on depression. ... ok
  Check weight convergence on potentiation. ... ok
  test_nn_pre_centered_synapse (nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest) ... ok
  test_nn_restr_synapse (nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest) ... ok
  test_nn_symm_synapse (nest.tests.test_stdp_nn_synapses.STDPNNSynapsesTest) ... ok
  Check that exceptions are thrown when setting bad parameters. ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) decay ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) decay ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) increase ... ok
  Check that pre and post-synaptic variables are zero at start. ... ok
  Check that weight changes whenever a pre-post-pre spike triplet ... ok
  Check that weight changes whenever a pre-post spike pair happen. ... ok
  Check that exceptions are thrown when setting bad parameters. ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) decay ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) decay ... ok
  Check that pre-synaptic variables (Kplus, Kplus_triplet) increase ... ok
  Check that pre and post-synaptic variables are zero at start. ... ok
  Check that weight changes whenever a pre-post-pre spike triplet ... ok
  Check that weight changes whenever a pre-post spike pair happen. ... ok
  test_step_rate_generator (nest.tests.test_step_rate_generator.StepRateGeneratorTestCase) ... ok
  Test GetConnections on sliced NodeCollection ... ok
  Test GetConnections with synapse_model ... ok
  Test simple SynapseCollection. ... ok
  Test get() on SynapseCollection ... ok
  Test get on SynapseCollection with pandas output ... SKIP: Pandas package is not available
  Test get() and set() on SynapseCollection. ... ok
  Multiple threads ... ok
  GetConnections with threads ... ok
  Gathering events across threads ... ok
  Test plot_network ... SKIP: pydot not found
  Test raster_plot ... ok
  Test voltage_trace from device ... ok
  Check that exceptions are thrown when setting bad parameters. ... ok
  Check that pre-synaptic variables Kplus decay after each post-synaptic ... ok
  Check that pre-synaptic variables Kplus decay after each ... ok
  Check that pre-synaptic variable, Kplus increase after each ... ok
  Check that pre and post-synaptic variables are zero at start. ... ok
  Check that weight changes whenever a pre-post spike pair happen. ... ok
  Weight Recorder Defined Subset Of Senders ... ok
  Weight Recorder Defined Subset Of Targets ... ok
  Weight Recorder Defined Subset Of Targets and Senders ... ok
  Weight Recorder Multapses ... ok
  Weight Recorder Multi Threaded ... ok
  Weight Recorder rports ... ok
  Weight Recorder Single Threaded ... ok
  FAIL: Invalid NodeCollection
    File "/home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/lib/python3.8/site-packages/nest/tests/test_errors.py", line 89, in test_InvalidNodeCollection
  AssertionError: NESTError not raised by add_test_primitive
  FAILED (SKIP=12, failures=1)

  PyNEST tests: 745
     Passed: 732
     Skipped: 12
     Failed: 1

Phase 8: Running C++ tests (experimental)
-----------------------------------------
  Not running C++ tests because NEST was compiled without Boost.

NEST Testsuite Summary
----------------------
  NEST Executable: /home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/bin/nest
  SLI Executable : /home/sepehrmn/code/sepehrmn-github/nest-simulator/opt/bin/sli
  Total number of tests: 1036
     Passed: 1021
     Skipped: 13 (12 PyNEST)
     Failed: 2 (1 PyNEST)

***
*** There were errors detected during the run of the NEST test suite!
***
*** Please report the problem at
***     https://github.com/nest/nest-simulator/issues
***
*** To help us diagnose the problem, please attach the archived content
*** of these directories to the issue:
***     - '/home/sepehrmn/code/sepehrmn-github/nest-simulator/bld/reports'
***     - '/home/sepehrmn/code/sepehrmn-github/nest-simulator/bld/reports/nest.pNfQJ'
***

CMakeFiles/installcheck.dir/build.make:77: recipe for target 'CMakeFiles/installcheck' failed
make[3]: *** [CMakeFiles/installcheck] Error 1
CMakeFiles/Makefile2:580: recipe for target 'CMakeFiles/installcheck.dir/all' failed
make[2]: *** [CMakeFiles/installcheck.dir/all] Error 2
CMakeFiles/Makefile2:587: recipe for target 'CMakeFiles/installcheck.dir/rule' failed
make[1]: *** [CMakeFiles/installcheck.dir/rule] Error 2
Makefile:195: recipe for target 'installcheck' failed
make: *** [installcheck] Error 2
